---
version: "2"
services:

  traefik:
    container_name: traefik
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--entryPoints.metrics.address=:8082"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addrouterslabels=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker=true"
    ports:
      - 80:80
      - 8080:8080
      - 8082:8082
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  jspring:
    container_name: jspring
    build: ./jspring
    environment:
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=jspring
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/jspring
      - SPRING_DATASOURCE_USERNAME=jspring
      - SPRING_DATASOURCE_PASSWORD=am5ureevaoThu9egahNg
      # - LOGGING_LEVEL_ROOT=DEBUG
    labels:
      - traefik.enable=true
      - traefik.http.routers.jspring.rule=Host(`jspring.localhost`)
      - traefik.http.routers.jspring.entrypoints=web
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=jspring
      - POSTGRES_USER=jspring
      - POSTGRES_PASSWORD=am5ureevaoThu9egahNg

  otel-collector:
    container_name: otel
    image: otel/opentelemetry-collector:0.68.0
    command: [ "--config=/etc/otel-collector.yml" ]
    volumes:
      - ./otel-collector.yml:/etc/otel-collector.yml:ro

  tempo:
    container_name: tempo
    image: grafana/tempo:1.5.0
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./tempo.yml:/etc/tempo.yml:ro

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.41.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)
      - traefik.http.routers.prometheus.entrypoints=web

  grafana:
    container_name: grafana
    image: grafana/grafana:9.3.2
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.localhost`)
      - traefik.http.routers.grafana.entrypoints=web
    depends_on:
      - prometheus
      - tempo
